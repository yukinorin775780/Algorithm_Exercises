class Solution {
    public int[][] merge(int[][] intervals) {
        List<int[]> result = new LinkedList<>();
        //按左边界升序排序
        Arrays.sort(intervals, (a,b) -> Integer.compare(a[0],b[0]));
        int left = intervals[0][0];
        int right = intervals[0][1];
        for(int i = 1; i < intervals.length; i++){
            //当前元素左边界 > 之前记录的最大右边界 说明没有重叠区域
            if(intervals[i][0] > right){
                //将上一个区间加入结果集
                result.add(new int[]{left,right});
                left = intervals[i][0];//更新左边界
                right = intervals[i][1];//更新右边界
            }else{//有重叠区域
                //更新最大右边界
                right = Math.max(right, intervals[i][1]);
            }
        }
        //将最后一个区间加入结果集
        result.add(new int[]{left,right});
        return result.toArray(new int[result.size()][]);
    }
}
