理论基础
https://programmercarl.com/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html

455.分发饼干
题目链接: https://leetcode.cn/problems/assign-cookies/
文章讲解: https://programmercarl.com/0455.%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2.html
视频链接: https://www.bilibili.com/video/BV1MM411b7cq

376. 摆动序列
题目链接: https://leetcode.cn/problems/wiggle-subsequence/
文章讲解: https://programmercarl.com/0376.%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97.html
视频链接: https://www.bilibili.com/video/BV17M411b7NS

53. 最大子序和
题目链接: https://leetcode.cn/problems/maximum-subarray/
文章讲解: https://programmercarl.com/0053.%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C.html
视频链接: https://www.bilibili.com/video/BV1aY4y1Z7ya

● 自己看到题目的第一想法：
455. 找到饼干中最大的值喂给符合条件的最大的小孩？
376. 。。。？？？不知道该怎么去实现，用一个数组记录相邻两个数的差值，如果连续的正数或负数就删除中间的留首尾。
53. 

● 看完代码随想录之后的想法：
455. 局部最优就是大饼干喂给胃口大的，充分利用饼干尺寸喂饱一个，全局最优就是喂饱尽可能多的小孩。
     先对两个数组进行排序，遍历顺序是从大到小进行遍历。用if来判断是否可以投喂 index>=0 && s[index] >= g[i], 此时投喂完毕，index--。
376. 局部最优是删除单调递增或递减序列里的中间元素，此时形成了全局最优的最长的摆动序列。说是删除，但没有必要在数组中真正的操作删除操作，因为所求的是一个长度值，所以只需要遇到摆动数组++即可。
     判断条件是prediff<=0 && curdiff > 0 || curdiff < 0 && prediff >= 0即两者为一正一负。
     在数组中可能会出现
     1. 上下坡有平坡: 出现上下平坡时候比如 1-2-2-2-1 时 在 1-2-2时通过判断因为curDiff==0 所以不会记录 此时preDiff = 1 一直到 2-2-1 时 此时 preDiff = 1, curDiff = -1 会记录！ 
     2. 首尾元素: 将prediff初始值设为0，这样如果只有数组中只有两个不相等的元素元素时会通过判断+1；如果只有两个相等的数时不会+1。
     3. 单调坡有平坡: prediff不用跟着curdiff来记录，而是判断当prediff和curdiff不相同即坡度调转时才记录。
53. 

● 自己实现过程中遇到哪些困难或者错误：
455. for循环和if的参数不能替换！if中的参数也不能替换顺序！必须要先判断index 是否 >= 0
376. 
53. 
