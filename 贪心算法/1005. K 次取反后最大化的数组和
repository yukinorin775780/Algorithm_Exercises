class Solution {
    public int largestSumAfterKNegations(int[] nums, int k) {
        //将数组按照绝对值大小从大到小进行排序
        nums = IntStream.of(nums)
                .boxed()
                .sorted((o1,o2) -> Math.abs(o2) - Math.abs(o1))
                .mapToInt(Integer::intValue).toArray();
        int len = nums.length;
        for(int i = 0; i < len ; i++){
            //从前向后遍历，遇到负数取反，同时k--
            if(nums[i] < 0 && k > 0){
                nums[i] = -nums[i];
                k--;
            }
        }
        if(k%2 == 1)//如果 k>0 且 k为奇数，则将绝对值最小即数组最后的元素取反
            nums[len - 1] = -nums[len - 1];
        int sum = 0;
        for(int i = 0 ; i < nums.length; i++){
            sum += nums[i];
        }
        return sum;
    }
}
