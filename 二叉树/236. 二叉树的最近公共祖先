class Solution {
    //1. 递归函数返回值以及参数
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        //2. 终止条件
        if(root == null || root == p || root == q) return root;
        //3. 单层递归逻辑 后序遍历
        TreeNode left = lowestCommonAncestor(root.left, p, q);//左
        TreeNode right = lowestCommonAncestor(root.right,p, q);//右
        //中
        if(left == null && right == null){//在左右子树中未找到p和q
            return null;
        }else if(left == null && right != null){//在右子树中找到其中一个
            return right;
        }else if(left != null && right == null){//在左子树中找到其中一个
            return left;
        }else{//找到两个结点
            return root;
        }
    }
}
