//方法1: 递归法 后序遍历
class Solution {
    public boolean isBalanced(TreeNode root) {
        return getHeight(root) != -1;
    }
    //1.递归函数的参数和返回值
    public int getHeight(TreeNode root){
        //2.终止条件
        if(root == null){
            return 0;
        }
        int leftHeight = getHeight(root.left);
        if(leftHeight == -1){//左子树不是平衡二叉树
            return -1;//树不可能是平衡二叉树 返回-1
        }
        int rightHeight = getHeight(root.right);
        if(rightHeight == -1){//右子树不是平衡二叉树
            return -1;//树不可能是平衡二叉树 返回-1
        }
        //判断左右子树是否是平衡二叉树
        if(Math.abs(leftHeight - rightHeight) > 1){//左右子树高度差值>1
            return -1;//不是平衡二叉树
        }
        //当前结点的左右子树满足平衡二叉树的条件
        return Math.max(leftHeight, rightHeight) + 1;//当前结点的高度
    }
}
