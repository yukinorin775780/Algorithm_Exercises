class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        postorder(root, res);
        return res;
    }

    public void postorder(TreeNode root, List<Integer> res){
        if(root == null){//终止条件
            return;
        }
        //后序遍历的搜索逻辑是左右中
        postorder(root.left, res);//左
        postorder(root.right, res);//右
        res.add(root.val);//中
    }
}
