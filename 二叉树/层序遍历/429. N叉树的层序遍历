/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> res = new ArrayList<>();
        Deque<Node> que = new LinkedList<>();
        if(root == null) return res;
        que.offerLast(root);
        while(!que.isEmpty()){
            int size = que.size();
            List<Integer> levelList = new ArrayList<>();
            while(size-- > 0){
                Node temp = que.pollFirst();
                levelList.add(temp.val);
                List<Node> children = temp.children;
                if(children == null || children.size() == 0){//无子结点
                    continue;
                }
                for(Node child : children){
                    que.offerLast(child);
                }
            }
            res.add(levelList);
        }
        return res;
    }
}
