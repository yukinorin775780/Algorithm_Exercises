62. 不同路径
题目链接: https://leetcode.cn/problems/unique-paths/
文章讲解: https://programmercarl.com/0062.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84.html
视频讲解: https://www.bilibili.com/video/BV1ve4y1x7Eu

63. 不同路径 II
题目链接: https://leetcode.cn/problems/unique-paths-ii/
文章讲解: https://programmercarl.com/0063.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84II.htmlhttps://programmercarl.com/0063.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84II.html
视频讲解: https://www.bilibili.com/video/BV1Ld4y1k7c6

● 自己看到题目的第一想法：
62. 没思路...
63. 跟62基本一致，就是在双层for循环时要判断obstacleGird[i][j]是否==0；为0说明没有障碍物才会有递推逻辑。而且在初始化第0行和第0列的1时也要判断obstracleGird[i][j] == 0;

● 看完代码随想录之后的想法：
62. 动规五部曲: 
     1. 确定dp数组以及下标的含义: dp[i][j] 表示从[0,0]出发，到(i,j)有 dp[i][j]条不同的路径。
     2. 确定递推公式: 因为dp[i][j]是由dp[i-1][j]向下走一格和dp[i][j-1]向右走一个组成，所以 dp[i][j] = dp[i-1][j] + dp[i][j-1];
     3. dp数组如何初始化: 由递推公式逆推可知，所有的dp[i][j]都是由第0行和第0列推导出来的，所以要初始化第0行和第0列。第0行: for循环dp[0][j] = 1;} 第0列: for循环{dp[i][0] = 1;} 
     4. 确定遍历顺序: 因为dp[i][j]都是有 i-1; j-1而来，所以要从左往右，从上往下遍历
     5. 打印dp数组(用于debug): 判断dp数组是否符合题目要求从而判断代码哪里出了问题。
63. 动规五部曲: 
     1. 确定dp数组以及下标的含义: dp[i][j] 表示从[0,0]出发，到(i,j)有 dp[i][j]条不同的路径。
     2. 确定递推公式:前提条件if(obs[i][j]==0) dp[i][j] = dp[i-1][j] + dp[i][j-1];
     3. dp数组如何初始化: 如果在第0行或第0列有障碍，那么障碍后面为null或0，因为路径方向不能朝上或左走，所以就不能绕过障碍物。所以 for循环 需要增加条件 i<m && obs[i][0] == 0 ; i<n && obs[0][i] == 0
     4. 确定遍历顺序: 从左到右，从上到下
     5. 打印dp数组(用于debug): 判断dp数组是否符合题目要求从而判断代码哪里出了问题。

● 自己实现过程中遇到哪些困难或者错误：
62. 无
63. 无
