309.最佳买卖股票时机含冷冻期
题目链接: https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-with-cooldown/
文章讲解: https://programmercarl.com/0309.%E6%9C%80%E4%BD%B3%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F.html
视频讲解：https://www.bilibili.com/video/BV1rP4y1D7ku

714.买卖股票的最佳时机含手续费
题目链接: https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/
文章讲解: https://programmercarl.com/0714.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89.html
视频讲解: https://www.bilibili.com/video/BV1z44y1Z7UR

股票总结
https://programmercarl.com/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E8%82%A1%E7%A5%A8%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93%E7%AF%87.html

● 自己看到题目的第一想法：
309. 需要多考虑一个冷静期的问题，但是可以多次交易(与买卖股票II一致)。不知道怎么去考虑冷静期...
714. 需要考虑手续费，但是可以多次交易(与买卖股票II一致)，只需要在买卖过程中添加手续费操作即可。具体添加在哪里不知道...

● 看完代码随想录之后的想法：
309. 动规五部曲: 
  1. 确定dp数组以及下标的含义: dp[i][0] 持有股票; dp[i][1] 保持卖出股票; dp[i][2] 具体当天卖出股票; dp[i][3] 冷冻期
  2. 确定递推公式: 
  dp[i][0] = dp[i-1][0]「前一天持有股票」 买入股票1: dp[i-1][3] - prices[i]「冷冻期的下一天买入股票」; 买入股票2: dp[i-1][1] - prices[i]「保持卖出股票的下一天买入股票」 三者去最大
  dp[i][1] = dp[i-1][1]「前一天保持卖出股票状态」 dp[i-1][3]「冷冻期的下一天保持卖出股票状态」 两者取最大
  dp[i][2] = dp[i-1][0] + prices[i]「前一天持有股票状态 当天卖出股票」
  dp[i][3] = dp[i-1][2]「一定是前一天卖出股票状态」
  3. dp数组如何初始化: dp[0][0] = -prices[0]; dp[0][1] = 0(非法状态，不能解释，通过递推公式来得出初始化结果 dp[i][0] = dp[i-1][1] - prices[i]); 
  dp[0][2] = 0（非法状态）; dp[0][3] = 0(非法状态);
  4. 确定遍历顺序: 从左向右，因为dp[i]是由 dp[i-1]推导来的。
  5. 打印dp数组(用于debug): 判断dp数组是否符合题目要求从而判断代码哪里出了问题。
714. 
  1. 确定dp数组以及下标的含义: dp[i][0] 持有股票最大利益; dp[i][1] 不持有股票最大利益。
  2. 确定递推公式: 
  dp[i][0] = max(dp[i-1][0], dp[i-1][1] - prices[i]);
  dp[i][1] = max(dp[i-1][1], dp[i-1][0] + prices[i] - fee「第i天卖出时扣除手续费」)
  

309. 因为冷冻期的存在，将不持有股票状态拆分成: 保持卖出股票状态和具体当天卖出股票状态，由此才可以通过不同的递推公式来体现冷冻期的存在。
在初始化的过程中发现是非法状态，无法理解，那么就通过递推公式来推导出应该初始化成什么。
714. 对于本题来说，可以在买入股票和卖出股票的时候算上手续费fee，要注意在买入时算上的情况在初始化的的时候也需要-fee

