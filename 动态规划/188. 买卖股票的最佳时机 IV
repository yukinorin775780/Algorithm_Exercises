class Solution {
    public int maxProfit(int k, int[] prices) {
        int len = prices.length;
        if(len == 0) return 0;
        int[][] dp = new int[len][2*k + 1];
        //初始化dp数组
        for(int j = 1; j < 2 * k; j += 2){
            dp[0][j] = -prices[0];
        }
        //递推
        for(int i = 1; i < len; i++){
            for(int j = 0; j < 2 * k; j += 2){
                dp[i][j+1] = Math.max(dp[i-1][j+1], dp[i-1][j] - prices[i]);
                dp[i][j+2] = Math.max(dp[i-1][j+2], dp[i-1][j+1] + prices[i]);
            }
        }
        return dp[len - 1][2 * k];
    }
}
