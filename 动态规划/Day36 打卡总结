01背包问题 二维
文章讲解: https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-1.html
视频讲解：https://www.bilibili.com/video/BV1cg411g7Y6

01背包问题 一维
文章讲解: https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-2.html
视频讲解：https://www.bilibili.com/video/BV1BU4y177kY

416. 分割等和子集
本题是 01背包的应用类题目
题目链接: https://leetcode.cn/problems/partition-equal-subset-sum/
文章讲解: https://programmercarl.com/0416.%E5%88%86%E5%89%B2%E7%AD%89%E5%92%8C%E5%AD%90%E9%9B%86.html
视频讲解：https://www.bilibili.com/video/BV1rt4y1N7jE

● 自己看到题目的第一想法：
416. 

● 看完代码随想录之后的想法：
01背包(二维)动规五部曲:
1. 确定dp数组以及下标的含义: dp[i][j] 下标[0,i]之间的物品任取放入容量为j的背包
2. 确定递推公式: 不放物品i dp[i-1][j]; 放物品i dp[i-1][j-weight[i]](不放物品i并减去物品i的容量此时所能放的最大价值的背包) + value[i] 
-> 所以 dp[i][j] = Math.max(dp[i-1][j]),dp[i-1][j-weight[i]]+value[i]]
3. dp数组如何初始化: 详见背包九讲pdf!!!! 简单的来说就是全部初始化为0，第一行符合条件的位置复制为value[0]
4. 确定遍历顺序: 两层for循环(物品和背包容量) 对于二维dp数组实现的01背包两层for循环顺序可以颠倒。
5. 打印dp数组(用于debug): 判断dp数组是否符合题目要求从而判断代码哪里出了问题。


416. 动规五部曲: 
     1. 确定dp数组以及下标的含义: 
     2. 确定递推公式: 
     3. dp数组如何初始化: 
     4. 确定遍历顺序: 
     5. 打印dp数组(用于debug): 判断dp数组是否符合题目要求从而判断代码哪里出了问题。

● 自己实现过程中遇到哪些困难或者错误：
416. 
