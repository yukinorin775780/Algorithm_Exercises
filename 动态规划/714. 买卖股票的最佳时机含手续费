//方法1: 手续费在卖出股票时计算
class Solution {
    public int maxProfit(int[] prices, int fee) {
        int len = prices.length;
        if(len < 2 || prices == null) return 0;
        int[][] dp = new int[len][2];
        dp[0][0] = -prices[0];
        for(int i = 1; i < len; i++){
            dp[i][0] = Math.max(dp[i-1][0], dp[i-1][1] - prices[i]);
            dp[i][1] = Math.max(dp[i-1][1], dp[i-1][0] + prices[i] - fee);
        }
        return dp[len-1][1];
    }
}
//方法2: 手续费在买入股票时计算
class Solution {
    public int maxProfit(int[] prices, int fee) {
        int len = prices.length;
        if(len < 2 || prices == null) return 0;
        int[][] dp = new int[len][2];
        dp[0][0] = -prices[0] - fee;
        for(int i = 1; i < len; i++){
            dp[i][0] = Math.max(dp[i-1][0], dp[i-1][1] - prices[i] - fee);
            dp[i][1] = Math.max(dp[i-1][1], dp[i-1][0] + prices[i]);
        }
        return dp[len-1][1];
    }
}
