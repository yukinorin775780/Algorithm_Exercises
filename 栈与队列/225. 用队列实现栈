//方法1: 双队列
class MyStack {

    Queue<Integer> queue1;//和栈中保持一致的队列
    Queue<Integer> queue2;//备份队列
    
    public MyStack() {
        queue1 = new LinkedList<>();
        queue2 = new LinkedList<>();
    }
    
    public void push(int x) {
        queue2.offer(x);//先放到辅助队列中
        while(!queue1.isEmpty()){//调换顺序
            queue2.offer(queue1.poll());
        }
        Queue<Integer> temp;
        temp = queue1;
        queue1 = queue2;
        queue2 = temp;//交换queue1和queue2，将元素都放到queue1中
    }
    
    public int pop() {
        //因为queue1中的元素和栈是顺序一致的。
        return queue1.poll();
    }
    
    public int top() {
        return queue1.peek();
    }
    
    public boolean empty() {
        return queue1.isEmpty();
    }
}

//方法2: 单队列
